import streamlit as st
import os
import json

# Carrega os n√≠veis de permiss√£o do arquivo JSON
def load_niveis():
    path = os.path.join("data", "niveis.json")
    if not os.path.exists(path):
        return []
    with open(path, "r", encoding="utf-8") as f:
        return json.load(f)

# Verifica se o usu√°rio logado possui determinada permiss√£o
def usuario_tem_permissao(permissao):
    if "nivel" not in st.session_state:
        return False
    niveis = load_niveis()
    nivel_usuario = st.session_state["nivel"]
    nivel = next((n for n in niveis if n["nome"] == nivel_usuario), None)
    if not nivel:
        return False
    return permissao in nivel["permissoes"]

# Fun√ß√£o principal da p√°gina de estoque
def show():
    # Verifica permiss√£o de acesso √† p√°gina
    if not usuario_tem_permissao("acessar_dashboard"):
        st.error("Voc√™ n√£o tem permiss√£o para acessar esta p√°gina.")
        st.stop()
    st.title("üì¶ Vis√£o Geral do Estoque")
    st.info("Aqui ser√° exibido o resumo do estoque.")
    st.markdown("---")
    # Se√ß√µes para entrada, sa√≠da e ajuste de estoque
    st.title("‚ûï Entrada de Produtos")
    st.info("Aqui ser√° poss√≠vel registrar entradas de produtos no estoque.")
    st.markdown("---")
    st.title("‚ûñ Sa√≠da de Produtos")
    st.info("Aqui ser√° poss√≠vel registrar sa√≠das de produtos do estoque.")
    st.markdown("---")
    st.title("‚úèÔ∏è Ajuste Manual de Estoque")
    st.info("Aqui ser√° poss√≠vel ajustar manualmente o saldo de estoque.")
    st.markdown("---")
    st.title("üìä Relat√≥rio de Estoque")
    st.info("Aqui ser√° poss√≠vel gerar relat√≥rios de estoque.")
    # Recomenda-se comentar cada bloco de l√≥gica adicional conforme expandir o arquivo
# Fim do arquivo estoque.py
